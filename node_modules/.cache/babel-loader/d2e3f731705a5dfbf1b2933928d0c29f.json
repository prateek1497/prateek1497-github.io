{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prateek/Documents/Assignments/orbihealth-assignment/src/components/DisplayCharts.js\";\nimport React, { Component } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nclass DisplayCharts extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  calculateCompoundedIR(principalAmount, yearValue, interestRate) {\n    // Final Amount = A(1+R/100)^t\n    let rate = 1 + interestRate / 100;\n    return principalAmount * Math.pow(rate, yearValue);\n  }\n\n  render() {\n    const {\n      loanAmount,\n      yearValue,\n      interestRate\n    } = this.props;\n    let principalAmount = loanAmount;\n    let finalAmount = this.calculateCompoundedIR(principalAmount, yearValue, interestRate);\n    let interestAmount = finalAmount - principalAmount;\n    let totalPayments = 180;\n    let monthlyEMI = principalAmount * interestRate * (Math.pow(1 + interestRate, totalPayments) / (Math.pow(1 + interestRate, totalPayments) - 1));\n    finalAmount = Math.trunc(finalAmount);\n    interestAmount = Math.trunc(interestAmount);\n    monthlyEMI = Math.trunc(monthlyEMI);\n    let arr = [{\n      text: 'Principal Amount',\n      value: principalAmount\n    }, {\n      text: 'Interest Amount',\n      value: interestAmount\n    }, {\n      text: 'Total Amount Payable',\n      value: finalAmount\n    }, {\n      text: 'Monthly EMI',\n      value: monthlyEMI\n    }];\n    let renderItems = arr.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"\",\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\u20B9\", item.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-text\",\n        children: renderItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-chart\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          animate: true,\n          animationDuration: 500,\n          animationEasing: \"ease-out\",\n          data: [{\n            title: 'One',\n            value: principalAmount,\n            color: '#E38627'\n          }, {\n            title: 'Two',\n            value: interestAmount,\n            color: '#C13C37'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DisplayCharts;","map":{"version":3,"sources":["/home/prateek/Documents/Assignments/orbihealth-assignment/src/components/DisplayCharts.js"],"names":["React","Component","PieChart","DisplayCharts","constructor","props","calculateCompoundedIR","principalAmount","yearValue","interestRate","rate","Math","pow","render","loanAmount","finalAmount","interestAmount","totalPayments","monthlyEMI","trunc","arr","text","value","renderItems","map","item","title","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { PieChart } from 'react-minimal-pie-chart';\n\n class DisplayCharts extends Component {\n     constructor(props){\n         super(props);\n     }\n\n     calculateCompoundedIR(principalAmount, yearValue, interestRate){\n\n        // Final Amount = A(1+R/100)^t\n        let rate=(1+interestRate/100)\n        return principalAmount * Math.pow(rate,yearValue)\n    }\n\n    render() {\n        const {loanAmount, yearValue, interestRate} = this.props\n        let principalAmount = loanAmount\n        let finalAmount = this.calculateCompoundedIR(principalAmount, yearValue,interestRate)\n        let interestAmount = finalAmount - principalAmount\n        let totalPayments = 180\n        let monthlyEMI = principalAmount*interestRate* (Math.pow((1+interestRate), totalPayments)/(Math.pow(1+interestRate, totalPayments)-1));\n        finalAmount = Math.trunc(finalAmount)\n        interestAmount = Math.trunc(interestAmount)\n        monthlyEMI = Math.trunc(monthlyEMI)\n\n        let arr = [{text: 'Principal Amount', value: principalAmount},\n        {text: 'Interest Amount', value: interestAmount},\n        {text: 'Total Amount Payable', value: finalAmount},\n        {text: 'Monthly EMI', value: monthlyEMI}\n        ]\n\n        \n        let renderItems = arr.map((item)=>{\n            return (\n                <div className= \"pie-label\">\n                    <label for=\"\">{item.text}</label>\n                    \n                    <h4>â‚¹{item.value}</h4>                 \n                </div>\n            )\n        })\n            \n\n\n        return (\n            <React.Fragment>\n                <div className = \"pie-text\">\n                {renderItems}\n                    \n               </div>\n               <div className = \"pie-chart\">\n                <PieChart\n                   animate\n                   animationDuration={500}\n                   animationEasing=\"ease-out\"\n                   \n                    data={[\n                        { title: 'One', value: principalAmount, color: '#E38627' },\n                        { title: 'Two', value: interestAmount, color: '#C13C37' },\n                    ]}\n                    />\n                    </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DisplayCharts\n"]},"metadata":{},"sourceType":"module"}